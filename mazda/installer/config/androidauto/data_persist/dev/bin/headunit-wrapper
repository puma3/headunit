#!/bin/sh

SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
LOGPATH=/tmp/root/headunit.log
SCRIPT_ARGS=$@

export LD_LIBRARY_PATH="${SCRIPTPATH}/headunit_libs:/jci/lib:/jci/opera/3rdpartylibs/freetype:/usr/lib/imx-mm/audio-codec:/usr/lib/imx-mm/video-codec:/usr/lib/imx-mm/parser:/data_persist/dev/lib:"
#override some GST plugins with these
export GST_PLUGIN_PATH="${SCRIPTPATH}/headunit_libs:/usr/lib/gstreamer-0.10"

DEBUG=1

if ! [ -e /tmp/root/headunit.json ]; then
 cp "${SCRIPTPATH}/headunit.json" /tmp/root/
fi

# start_headunit()
# {
#    rm -f /tmp/root/headunit-wireless.status
#    sed -i 's."wifiTransport": true."wifiTransport": false.g' /tmp/root/headunit.json
#    taskset 0xFFFFFFFF "${SCRIPTPATH}/headunit" "$@" > /dev/null 2>&1 &
#    sleep 2
#    touch /tmp/root/headunit.status
#    [ $DEBUG -eq 1 ] && echo "=== headunit-usb ==="
#    [ $DEBUG -eq 1 ] && cat /tmp/root/headunit.json  >> ${LOGPATH}
#    [ $DEBUG -eq 1 ] && echo "===================="
# }

start_AAwireless()
{
    rm -f /tmp/root/headunit.status
    sed -i 's."wifiTransport": false."wifiTransport": true.g' /tmp/root/headunit.json
    taskset 0xFFFFFFFF "${SCRIPTPATH}/headunit" "$@" > /dev/null 2>&1 &
    sleep 2
    touch /tmp/root/headunit-wireless.status
   [ $DEBUG -eq 1 ] && echo "=== headunit-wifi ==="
   [ $DEBUG -eq 1 ] && cat /tmp/root/headunit.json  >> ${LOGPATH}
   [ $DEBUG -eq 1 ] && echo "===================="
}

start_AAwireless()
{
    # rm -f /tmp/root/headunit.status
    sed -i 's."wifiTransport": false."wifiTransport": true.g' /tmp/root/headunit.json
    taskset 0xFFFFFFFF "${SCRIPTPATH}/headunit" "$@" > /dev/null 2>&1 &
    sleep 2
    touch /tmp/root/headunit-wireless.status
}

rm -f /tmp/root/headunit-wireless.status

# prevent conflict by Official AA
pkill -f 'aap_service'
killall -9 aap_service carplayd L_jciCARPLAY L_jciAAPA

MAX_WAIT_TIME=60
while true
do
 NET_CHECK=`netstat -rn|awk '$2=="192.168.8.1" {print}'|wc -l|awk '{print $1}'`
 SERVER_CHECK=`${SCRIPTPATH}/nc-arm-static -vz 192.168.8.100 5277 2>&1 | grep open | wc -l`

 [ $DEBUG -eq 1 ] && echo "NET_CHECK=${NET_CHECK} && SERVER_CHECK=${SERVER_CHECK}"

 if [ $NET_CHECK == 1 ]&&[ $SERVER_CHECK == 1 ]; then
    if ! [ -e /tmp/root/headunit-wireless.status ]; then
        [ $DEBUG -eq 1 ] && echo "Start WIRELESS" >> ${LOGPATH}
        start_AAwireless
        MAX_WAIT_TIME=90
    fi
 else
    if [ -e /tmp/root/headunit-wireless.status ]; then
        [ $DEBUG -eq 1 ] && echo "Kill WIRELESS" >> ${LOGPATH}
        killall -q headunit
        rm -f /tmp/root/headunit-wireless.status
    fi
 fi

 RAND=`expr $RANDOM % $MAX_WAIT_TIME`
 echo "go sleep $RAND"
 sleep $RAND

done